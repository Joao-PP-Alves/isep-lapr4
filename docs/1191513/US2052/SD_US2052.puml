@startuml
autonumber

actor "Human Resources \nResponsible" as HRR
participant ":AddTeamUI" as ADDTEAMUI <<presentation>>
participant ":AddTeamController" as ADDTEAMCTRL <<application>>
participant ":TeamBuilder" as TEAMBUILDER <<builder>>
participant "team\n:Team" as TEAM <<domain>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database TeamRepository as Repository <<repository>>


HRR --> ADDTEAMUI : Add new team
activate ADDTEAMUI
ADDTEAMUI --> HRR : Requests info input \n(EquipaId, Descricao)

HRR --> ADDTEAMUI : Inputs requested info

ADDTEAMUI -> ADDTEAMCTRL : addNewTeam\n(EquipaId, Descricao)
note right of TEAMBUILDER:TeamBuilder is used to create an entity of Team type in a valid state
activate ADDTEAMCTRL
ADDTEAMCTRL -> TEAMBUILDER : create()
ADDTEAMCTRL -> TEAMBUILDER : team = createTeam\n(EquipaId, Descricao)

activate TEAMBUILDER
TEAMBUILDER -> TEAM : team = createTeam\n(EquipaId, Descricao)
deactivate TEAMBUILDER

ADDTEAMCTRL -> Persistence : factory = repositories()
activate Persistence
Persistence -> Factory : create()
deactivate Persistence

ADDTEAMCTRL -> Factory : teamRepository = listTeams()
activate Factory
Factory -> Repository : create()
deactivate Factory

opt if (!teamRepository.contains(team))
ADDTEAMCTRL -> Repository : save(team)

ADDTEAMCTRL --> ADDTEAMUI : team
deactivate TEAMBUILDER
deactivate ADDTEAMCTRL

ref over HRR
Associate Team to 1 TeamType
end ref
ADDTEAMUI --> HRR : displaySuccess
deactivate ADDTEAMUI
end opt

@enduml
