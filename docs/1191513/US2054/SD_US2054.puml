@startuml
autonumber

actor "Human Resources \nResponsible" as HRR
participant ":AddTeamTypeUI" as ADDTEAMTYPEUI <<presentation>>
participant ":AddTeamTypeController" as ADDTEAMTYPECTRL <<application>>
participant ":TeamTypeBuilder" as TEAMTYPEBUILDER <<builder>>
participant "teamType\n:TeamType" as TEAMTYPE <<domain>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database TeamRepository as Repository <<repository>>


HRR --> ADDTEAMTYPEUI : Add new teamType
activate ADDTEAMTYPEUI
ADDTEAMTYPEUI --> HRR : Requests info input \n(TipoEquipaId, cor, Descricao)

HRR --> ADDTEAMTYPEUI : Inputs requested info

ADDTEAMTYPEUI -> ADDTEAMTYPECTRL : addNewTeam\n(TipoEquipaId, cor, Descricao)
note right of TEAMTYPEBUILDER:TEAMTYPEBUILDER is used to create an entity of Team type in a valid state
activate ADDTEAMTYPECTRL
ADDTEAMTYPECTRL -> TEAMTYPEBUILDER : create()
ADDTEAMTYPECTRL -> TEAMTYPEBUILDER : teamType = createTeam\n(TipoEquipaId, cor, Descricao)

activate TEAMTYPEBUILDER
TEAMTYPEBUILDER -> TEAMTYPE : team = createTeam\n(TipoEquipaId, cor, Descricao)
deactivate TEAMTYPEBUILDER

ADDTEAMTYPECTRL -> Persistence : factory = repositories()
activate Persistence
Persistence -> Factory : create()
deactivate Persistence

ADDTEAMTYPECTRL -> Factory : teamRepository = listTeams()
activate Factory
Factory -> Repository : create()
deactivate Factory

opt if (!teamTypeRepository.contains(teamType))
ADDTEAMTYPECTRL -> Repository : save(team)

ADDTEAMTYPECTRL --> ADDTEAMTYPEUI : team
deactivate TEAMTYPEBUILDER
deactivate ADDTEAMTYPECTRL

ADDTEAMTYPEUI --> HRR : displaySuccess
deactivate ADDTEAMTYPEUI
end opt

@enduml
