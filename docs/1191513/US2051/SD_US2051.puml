@startuml
autonumber

actor "Human Resources \nResponsible" as HRR
participant ":AddCollaboratorUI" as ADDCOLLABUI <<presentation>>
participant ":AddCollaboratorController" as ADDCOLLABCTRL <<application>>
participant ":CollaboratorBuilder" as COLLABBUILDER <<builder>>
participant "collab\n:Collaborator" as COLLAB <<domain>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database UserRepository as Repository <<repository>>


HRR --> ADDCOLLABUI : Add new collaborator
activate ADDCOLLABUI
ADDCOLLABUI --> HRR : Requests info input \n(fullName, shortName, address, \ndate, phoneNumber, role)

HRR --> ADDCOLLABUI : Inputs requested info

ADDCOLLABUI -> ADDCOLLABCTRL : addNewCollaborator\n(fullName, shortName, address, \ndate, phoneNumber, role)
note right of COLLABBUILDER:CollaboratorBuilder is used to create an entity of Collaborator type in a valid state
activate ADDCOLLABCTRL
ADDCOLLABCTRL -> COLLABBUILDER : create()
ADDCOLLABCTRL -> COLLABBUILDER : collab = createCollaborator\n(fullName, shortName, address, \ndate, phoneNumber, role)

activate COLLABBUILDER
COLLABBUILDER -> COLLAB : collab = createCollaborator\n(fullName, shortName, address, \ndate, phoneNumber, role)
deactivate COLLABBUILDER

ADDCOLLABCTRL -> Persistence : factory = repositories()
activate Persistence
Persistence -> Factory : create()
deactivate Persistence

ADDCOLLABCTRL -> Factory : collabRepository = listCollabs()
activate Factory
Factory -> Repository : create()
deactivate Factory

opt if (!collabRepository.contains(collab))
ADDCOLLABCTRL -> Repository : save(collab)

ADDCOLLABCTRL --> ADDCOLLABUI : collab
deactivate COLLABBUILDER

ref over HRR
US2053 - Add collaborator to 1 or more teams
end ref

ADDCOLLABUI --> HRR : displaySuccess
deactivate ADDCOLLABCTRL

deactivate ADDCOLLABUI
end opt

@enduml
