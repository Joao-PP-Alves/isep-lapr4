@startuml
autonumber

actor "ResponsÃ¡vel \nRecursos Humanos" as RRH
participant ":ModifyColaboratorTeamUI" as UI
participant ":ModifyColaboratorTeamController" as CTRL
participant ":PersistenceContext" as PerC
participant ":AppSettings" as APP
participant ":RepositoryFactory" as REPFAC
participant ":ColaboratorRepository" as COLABREP
participant ":TeamRepository" as TEAMREP
participant "team:Team" as TEAM
participant "colaborator\n:Colaborator" as COLAB

activate RRH
RRH -> UI : Modify colaborator's team
UI -> UI : doShow()
activate UI
UI -> CTRL : listColaborators()
activate CTRL
CTRL -> PerC : repositories()
activate PerC
PerC -> APP : instance()
activate APP
PerC -> APP : getRepositoryFactory()
APP --> REPFAC : create()
activate REPFAC
REPFAC --> APP
deactivate REPFAC
APP --> CTRL
deactivate APP
deactivate PerC
CTRL -> REPFAC : colaborators()
activate REPFAC
REPFAC --> COLABREP : create()
CTRL -> COLABREP : list = all()
activate COLABREP
COLABREP --> CTRL
deactivate COLABREP
CTRL --> UI : list
deactivate REPFAC
deactivate CTRL
UI --> RRH : Show, asks to choose one and\nto select management option\n(delete/add to team)
deactivate UI
RRH -> UI: chooses colaborator and option
activate UI
UI -> CTRL : listTeams()
activate CTRL
CTRL -> REPFAC : teams()
activate REPFAC
REPFAC -> TEAMREP : create()
CTRL -> TEAMREP : listTeams = all()
activate TEAMREP
TEAMREP --> CTRL
deactivate TEAMREP
CTRL --> UI : listTeams
deactivate REPFAC
deactivate CTRL
UI --> RRH : Show list, asks to choose a team
deactivate UI
RRH -> UI : chooses
activate UI
UI -> CTRL : changeTeam(colaborator,team,option)
activate CTRL
CTRL -> TEAM : set = getMembers()
activate TEAM
deactivate TEAM
CTRL -> CTRL : add/remove(colaborator)
CTRL -> TEAM : setMembers(set)
activate TEAM
deactivate TEAM
CTRL -> TEAMREP : save(team)
activate TEAMREP
deactivate TEAMREP
CTRL --> UI : changeStatus
deactivate CTRL
UI --> RRH : changed. back to menu
deactivate UI
deactivate RRH











@enduml
